api:
  dashboard: false
  insecure: false
  debug: true

entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  websecure:
    address: ":443"
  metrics:
    address: ":8899"

log:
  level: DEBUG
  format: json

accessLog:
  filePath: "/dev/stdout"
  format: json
  fields:
    headers:
      defaultMode: keep
      names:
        Host: keep
        X-Forwarded-For: keep
        X-Forwarded-Proto: keep
        X-Real-IP: keep
    names:
      StartUTC: keep
      StartLocal: keep
      Duration: keep
      RetryAttempts: keep
      RouterName: keep

metrics:
  prometheus:
    entryPoint: metrics
    addEntryPointsLabels: true
    addServicesLabels: true
    addrouterslabels: false
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5.0

# Provider Configuration
providers:
  providersThrottleDuration: 2s
  docker:
    watch: true
    network: traefik
    defaultRule: "Host(`{{ normalize .Name }}.localhost`)"
    exposedByDefault: false
  file:
    watch: true
    filename: /etc/traefik/dynamic.yaml

# HTTP Configuration
http:
  middlewares:
    redirector-auth:
      forwardAuth:
        address: "http://redirector-dev:3000/"
        trustForwardHeader: true
        authResponseHeaders:
          - "ServiceAddr"
          - "ServiceUrl"
          - "X-Forwarded-Host"
          - "X-Forwarded-Uri"
          - "X-Forwarded-Method"
          - "X-Forwarded-Proto"
          - "X-Forwarded-For"
    add-forwarded-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Server: "traefik"

  routers:
    main:
      rule: "HostRegexp(`{subdomain:[a-z0-9-]+}.localhost`)"
      service: backend@docker
      entryPoints:
        - web
        - websecure
      middlewares:
        - add-forwarded-headers
        - redirector-auth
      priority: 1
      tls:
        certResolver: default

    dashboard:
      rule: "Host(`traefik.localhost`)"
      service: api@internal
      entryPoints:
        - web
        - websecure
      tls:
        certResolver: default

  services:
    backend:
      loadBalancer:
        servers:
          - url: "http://redirect-backend"
        passHostHeader: true