services:
  redirector-dev:
    build:
      context: ..
      target: development
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ../:/app:cached
      - ./ext/zshrc:/home/developer/.zshrc
      - cargo-cache:/usr/local/cargo/registry
      - target-cache:/app/target
      - rust-tools:/usr/local/cargo/bin
    environment:
      - RUST_LOG=debug
      - RUST_BACKTRACE=1
      - CARGO_HOME=/usr/local/cargo
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    ports:
      - "3000:3000"
    command: /bin/sh -c "while sleep 1000; do :; done"
    init: true
    user: developer
    labels:
      - "traefik.enable=true"
      # Auth service definition
      - "traefik.http.middlewares.redirector-auth.forwardauth.address=http://redirector-dev:3000"
      - "traefik.http.middlewares.redirector-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.redirector-headers.headers.customRequestHeaders.X-Forwarded-Server={request_X-Forwarded-Server}"
      - "traefik.http.middlewares.redirector-headers.headers.customRequestHeaders.X-Forwarded-Host={request_Host}"
    networks:
      - traefik

  traefik-frontend:
    image: traefik:v2.10
    container_name: traefik-frontend
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--providers.docker.network=traefik"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      # Dashboard configuration
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"
      # Main routing configuration
      - "traefik.http.routers.main.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.localhost`)"
      - "traefik.http.routers.main.entrypoints=web"
      - "traefik.http.routers.main.middlewares=add-forwarded-headers,redirector-auth"
      - "traefik.http.services.main.loadbalancer.server.port=80"
      - "traefik.http.middlewares.add-forwarded-headers.headers.customrequestheaders.X-Forwarded-Server=traefik"
    networks:
      - traefik

  # Example backend service that returns redirects
  redirect-backend:
    image: nginx:alpine
    container_name: redirect-backend
    volumes:
      - ./ext/nginx-redirect.conf:/etc/nginx/conf.d/backend.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=80"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.middlewares=redirector-headers"
    networks:
      - traefik

networks:
  traefik:
    name: traefik

volumes:
  cargo-cache:
    name: redirector-cargo-cache
  target-cache:
    name: redirector-target-cache
  rust-tools:
    name: redirector-rust-tools